#Python 3.5 installation
export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl
sudo pip3 install --upgrade $TF_BINARY_URL

####Simple computations
https://github.com/PacktPublishing/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter01/Simple%20Computations/simple.py

#Interactive Sessions
A TensorFlow Session for use in interactive contexts, such as a shell.
The only difference with a regular Session is that an InteractiveSession installs itself as the default session on construction. The methods tf.Tensor.eval and tf.Operation.run will use that session to run ops
This is convenient in interactive shells and IPython notebooks, as it avoids having to pass an explicit Session object to run ops
For example: [Source: https://www.tensorflow.org/api_docs/python/tf/InteractiveSession]

sess = tf.InteractiveSession()
a = tf.constant(5.0)
b = tf.constant(6.0)
c = a * b
# We can just use 'c.eval()' without passing 'sess'
print(c.eval())
sess.close()
#Note that a regular session installs itself as the default session when it is created in a with statement. The common usage in non-interactive programs is to follow that pattern:

a = tf.constant(5.0)
b = tf.constant(6.0)
c = a * b
with tf.Session():
  # We can also use 'c.eval()' here.
  print(c.eval())


####Logistic Regression
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter01/Logistic%20regression%20model%20building/logistic.py


####Basic Neural Network
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter02/Basic%20neural%20networks/basic_nn.py

####Single Hidden Layer Neural Network
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter02/Single%20hidden%20layer%20explained/single_hidden.py

####Multi layer perceptron
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter02/Results%20of%20the%20multiple%20hidden%20layer/mlp.py
#truncated_normal = The generated values follow a normal distribution with specified mean and standard deviation, except that values whose magnitude is more than 2 standard deviations from the mean are dropped and re-picked.

####Simple Convolutional Neural Network
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter03/Pooling%20layer%20application/conv_simple.py

Why strides [1, x, y, 1] for convnets?
The first 1 is the batch: You don't usually want to skip over examples in your batch, or you shouldn't have included them in the first place. The last 1 is the depth of the convolution: You don't usually want to skip inputs, for the same reason.
The conv2d operator is more general, so you could create convolutions that slide the window along other dimensions, but that's not a typical use in convnets. The typical use is to use them spatially.
[batch_size, image_rows, image_cols, number_of_colors]
#Source: https://stackoverflow.com/questions/34642595/tensorflow-strides-argument

#####Convolutional Neural Network
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter03/Deep%20CNN/conv.py
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter03/Wrapping%20up%20deep%20CNN/conv_p2.py

####Deep CNN
!#CNN
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter04/DNNs/cnn.py

#DNN
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter04/DNNs/dnn.py

!#Extracting weights
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter04/DNNs/extracting_weights.py

####Recurrent Neural Networks
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter04/Exploring%20RNNs/rnn_tf.py

####TF LEARN
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter04/TensorFlow%20learn/learn_intro.py

!####sk flow intro
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter04/TensorFlow%20learn/skflow_intro.py

####sk flow rnn
https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/skflow/mnist_weights.py

####Research Evaluation
https://github.com/sohomghosh/Hands-On-Deep-Learning-with-TensorFlow/blob/master/Chapter05/Research%20evaluation/data_review.py

##Stanford Tensorflow tutorials
http://web.stanford.edu/class/cs20si/syllabus.html
https://github.com/chiphuyen/stanford-tensorflow-tutorials/
https://github.com/sohomghosh/tf-stanford-tutorials

##Other Tensorflow tutorials
https://github.com/sohomghosh/TensorFlow-Tutorials
